# Generated by Django 5.0 on 2025-08-05 14:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="HotelCustomerQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("customer_query_message", models.TextField()),
                ("ai_email_response", models.TextField()),
                ("phone_number", models.CharField(max_length=50, null=True)),
                ("email_address", models.EmailField(max_length=254)),
                (
                    "language_mode",
                    models.CharField(
                        choices=[("English", "English"), ("Spanish", "Spanish")],
                        default="English",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HotelCustomerVoiceCall",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("caller_name", models.CharField(max_length=150, null=True)),
                ("phone_number", models.CharField(max_length=50, null=True)),
                ("email", models.CharField(max_length=50, null=True)),
                ("location", models.CharField(max_length=150, null=True)),
                ("call_summary", models.TextField()),
                ("call_transcript", models.TextField()),
                ("recording_url", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HotelEnglishSpeakingCustomerQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email_address", models.EmailField(max_length=254)),
                ("customer_query_message", models.TextField()),
                ("customer_comments", models.TextField()),
                ("ai_assistant_response", models.TextField()),
                ("laundry_event_details", models.TextField()),
                ("location", models.CharField(max_length=150)),
                ("timestamp", models.DateTimeField()),
                ("ai_email_response", models.TextField()),
                ("phone_number", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[("Open", "Open"), ("Resolved", "Resolved")],
                        default="Open",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HotelInRoomRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("customer_name", models.CharField(max_length=150, null=True)),
                ("phone_number", models.CharField(max_length=50, null=True)),
                ("email", models.CharField(max_length=50, null=True)),
                ("room_number", models.CharField(max_length=50, null=True)),
                ("request_type", models.CharField(max_length=50, null=True)),
                ("request_details", models.TextField()),
                (
                    "request_status",
                    models.CharField(
                        choices=[("Open", "Open"), ("Resolved", "Resolved")],
                        default="Open",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="HotelSpanishSpeakingCustomerQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("spreadsheet_row", models.IntegerField(null=True)),
                ("first_name", models.CharField(max_length=100, null=True)),
                ("last_name", models.CharField(max_length=100)),
                ("email_address", models.EmailField(max_length=254)),
                ("phone_number", models.CharField(max_length=50, null=True)),
                ("customer_query_message_english", models.TextField(null=True)),
                ("customer_query_message_spanish", models.TextField(null=True)),
                ("customer_comments_english", models.TextField(null=True)),
                ("customer_comments_spanish", models.TextField(null=True)),
                ("ai_assistant_response_english", models.TextField(null=True)),
                ("ai_assistant_response_spanish", models.TextField(null=True)),
                ("laundry_event_details_english", models.TextField(null=True)),
                ("laundry_event_details_spanish", models.TextField(null=True)),
                ("location", models.CharField(max_length=150, null=True)),
                ("timestamp", models.DateTimeField()),
                ("ai_email_response_spanish", models.TextField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Open", "Open"), ("Resolved", "Resolved")],
                        default="Open",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
